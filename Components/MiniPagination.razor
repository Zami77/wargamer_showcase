@inject IJSRuntime iJSRuntime

<div class="mini-pagination">
        @foreach (var mini in GetCurrentPage())
        {
            <MiniCard mini="@mini" isUser="@canEdit" />
        }
    <MudPagination Color="Color.Primary"
                   Count="(minis.Count/minisPerPage + (minis.Count % minisPerPage > 0 ? 1 : 0))"
                   @bind-Selected="@_selected" />
</div>
@code {
    [Parameter]
    public List<Mini> minis { get; set; }
    [Parameter]
    public int minisPerPage { get; set; } = 3;
    [Parameter]
    public bool canEdit { get; set; } = false;

    int _selected = 1;
    int _selectedPrev = 1;

    protected override async void OnAfterRender(bool firstRender)
    {
        if (_selected != _selectedPrev) {
            await iJSRuntime.InvokeVoidAsync("ScrollToTop");
            _selectedPrev = _selected;
        }
    }
    private List<Mini> GetCurrentPage()
    {
        if (minis.Count <= minisPerPage)
        {
            return minis;
        }

        int curIndex = (_selected - 1) * minisPerPage;

        if (curIndex + minisPerPage >= minis.Count)
        {
            var tailEndMinis = minis.GetRange(curIndex, minis.Count - curIndex);
            return tailEndMinis;
        }

        return minis.GetRange(curIndex, minisPerPage);

    }
}
