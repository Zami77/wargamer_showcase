@page "/miniupload"
@using System.IO
@using System.Text.RegularExpressions
@using BlazorInputFile
@using wargamer_showcase.Services
@using Microsoft.Identity.Web
@using Microsoft.Extensions.Options

@inject IOptionsMonitor<MicrosoftIdentityOptions> microsoftIdentityOptions
@inject AzureStorageService storageService
@inject ICosmosDbService cosmosDbService
@inject ILogger<MiniUpload> logger
@inject IJSRuntime iJSRuntime


<h3>Mini Upload</h3>
<AuthorizeView>
    <Authorized>
        @{
            curUsername = context.User.FindFirst(c => c.Type == "signinname")?.Value ?? "";
        }
        <MiniForm curUser="curUser" mini="newMini" allPaints="allPaints" />
    </Authorized>
    <NotAuthorized>
        <div class="not-logged-in">
            Please log in to upload Minis!
        </div>
    </NotAuthorized>
</AuthorizeView>


@code {
    private string curUsername = "";
    User curUser = new();
    List<Paint> allPaints = new();

    /* Mini input fields */
    private Mini newMini = new();

    protected override async Task OnInitializedAsync()
    {
        var response = await cosmosDbService.GetAllPaintsAsync();
        allPaints = response.ToList();

        if (curUsername.Length > 0)
        {
            curUser = await cosmosDbService.GetUserByNameAsync(curUsername);
        }
    }

}
