@page "/myminis"

@using Microsoft.Identity.Web
@using Microsoft.Extensions.Options

@inject IOptionsMonitor<MicrosoftIdentityOptions> microsoftIdentityOptions
@inject ICosmosDbService cosmosDbService;
@inject ILogger<MyMinis> logger

<AuthorizeView>
    <Authorized>
        @{
            curUsername = context.User.FindFirst(c => c.Type == "signinname")?.Value ?? "";
        }
        <h3>@curUsername's Minis</h3>
        <div class="@curUser.Username-minis">
            <MiniPagination minis="@userMinis" canEdit="true"/>
        </div>
    </Authorized>
    <NotAuthorized>
        Log in to see your minis!
    </NotAuthorized>
</AuthorizeView>
@code {
    List<Mini> userMinis = new();
    string curUsername = "";
    User curUser = new();

    protected override async void OnAfterRender(bool firstRender)
    {
        if (curUsername.Length > 0 && String.IsNullOrWhiteSpace(curUser.Username))
        {
            curUser = await cosmosDbService.GetUserByNameAsync(curUsername);
            logger.LogInformation($"Found user:{curUser.Username}");
            var responseMinis = await cosmosDbService.GetMinisForUser(curUser.Minis);
            userMinis = responseMinis.OrderByDescending(m => m.CreatedTime).ToList();
            this.StateHasChanged();
        }
    }


}
