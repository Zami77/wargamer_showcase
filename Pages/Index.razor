@page "/"
@using Microsoft.Identity.Web
@using Microsoft.Extensions.Options
@inject IOptionsMonitor<MicrosoftIdentityOptions> microsoftIdentityOptions
@inject ICosmosDbService cosmosDbService
@inject ILogger<Index> logger

<h1>Wargamer Showcase</h1>

<AuthorizeView>
    <Authorized>
        @foreach (var claim in context.User.Claims)
        {
            if (claim.Type is "newUser" && claim.Value is "true")
            {
                <text> Thanks for joining Wargamer Showcase, @context.User.GetDisplayName()! </text>
                isNewUser = true;
                newUsername = context.User.GetDisplayName();
                break;
            }
        }
    </Authorized>
    <NotAuthorized>
        <text>Login to inventory paint and upload Minis!</text>
    </NotAuthorized>
</AuthorizeView>

@code {
    bool isNewUser = false;
    string newUsername = "";

    private async Task addNewUser(string username)
    {
        var userExists = await cosmosDbService.UserExistsAsync(username);
        if (!userExists)
        {
            User newUser = new User(username);
            await cosmosDbService.AddUserAsync(newUser);
            logger.LogInformation("Added user to cosmos");
        }
    }
    protected override async void OnAfterRender(bool firstRender)
    {
        if (isNewUser && newUsername.Length > 0)
        {
            isNewUser = false;
            await addNewUser(newUsername);
        }
    }
}