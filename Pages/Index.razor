@page "/"
@using Microsoft.Identity.Web
@using Microsoft.Extensions.Options
@inject IOptionsMonitor<MicrosoftIdentityOptions> microsoftIdentityOptions
@inject ICosmosDbService cosmosDbService
@inject ILogger<Index> logger

<h1>Wargamer Showcase</h1>

<AuthorizeView>
    <Authorized>
        @{ 
            curUser = context.User.FindFirst(c => c.Type == "signinname")?.Value ?? "";
            if (context.User.FindFirst(c => c.Type == "newUser")?.Value == "true")
            {
                loginMsg = "Thanks for joining Wargamer Showcase";
                isNewUser = true;
            }
        }

        <text>@loginMsg, @curUser!</text>
    </Authorized>
    <NotAuthorized>
        <text>Login to inventory paint and upload Minis!</text>
    </NotAuthorized>
</AuthorizeView>

@code {
        bool isNewUser = false;
        string curUser = "";
        string loginMsg = "Welcome back to Wargamer Showcase";

        private async Task addNewUser(string username)
        {
            var userExists = await cosmosDbService.UserExistsAsync(username);
            if (!userExists)
            {
                User newUser = new User()
                {
                    Username = curUser
                };
                await cosmosDbService.AddUserAsync(newUser);
                logger.LogInformation("Added user to cosmos");
            }
        }
    protected override async void OnAfterRender(bool firstRender)
    {
        if (isNewUser && curUser.Length > 0)
        {
            isNewUser = false;
            await addNewUser(curUser);
        }
    }
}