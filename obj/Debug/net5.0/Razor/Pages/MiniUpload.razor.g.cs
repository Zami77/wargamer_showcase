#pragma checksum "C:\GitHub\wargamer_showcase\Pages\MiniUpload.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "2e0925199b238d678716a65b499ad83123759805"
// <auto-generated/>
#pragma warning disable 1591
namespace wargamer_showcase.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\GitHub\wargamer_showcase\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\GitHub\wargamer_showcase\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\GitHub\wargamer_showcase\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\GitHub\wargamer_showcase\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\GitHub\wargamer_showcase\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\GitHub\wargamer_showcase\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\GitHub\wargamer_showcase\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\GitHub\wargamer_showcase\_Imports.razor"
using Microsoft.Extensions.Logging;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\GitHub\wargamer_showcase\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\GitHub\wargamer_showcase\_Imports.razor"
using wargamer_showcase;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\GitHub\wargamer_showcase\_Imports.razor"
using wargamer_showcase.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\GitHub\wargamer_showcase\_Imports.razor"
using wargamer_showcase.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\GitHub\wargamer_showcase\Pages\MiniUpload.razor"
using System.IO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\GitHub\wargamer_showcase\Pages\MiniUpload.razor"
using System.Text.RegularExpressions;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\GitHub\wargamer_showcase\Pages\MiniUpload.razor"
using BlazorInputFile;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\GitHub\wargamer_showcase\Pages\MiniUpload.razor"
using wargamer_showcase.Services;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/miniupload")]
    public partial class MiniUpload : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
            __builder.AddMarkupContent(0, "<h3>Mini Upload</h3>\r\n");
            __builder.OpenElement(1, "div");
            __builder.OpenElement(2, "div");
            __builder.AddAttribute(3, "class", "row");
            __builder.OpenComponent<BlazorInputFile.InputFile>(4);
            __builder.AddAttribute(5, "OnChange", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<BlazorInputFile.IFileListEntry[]>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<BlazorInputFile.IFileListEntry[]>(this, 
#nullable restore
#line 15 "C:\GitHub\wargamer_showcase\Pages\MiniUpload.razor"
                                             HandleImageInputChange

#line default
#line hidden
#nullable disable
            )));
            __builder.CloseComponent();
            __builder.CloseElement();
            __builder.AddMarkupContent(6, "\r\n    ");
            __builder.OpenElement(7, "div");
            __builder.AddAttribute(8, "class", "row");
            __builder.OpenElement(9, "img");
            __builder.AddAttribute(10, "src", 
#nullable restore
#line 18 "C:\GitHub\wargamer_showcase\Pages\MiniUpload.razor"
                   dataUri

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.AddMarkupContent(11, "\r\n    ");
            __builder.OpenElement(12, "div");
            __builder.AddAttribute(13, "class", "row");
            __builder.OpenElement(14, "button");
            __builder.AddAttribute(15, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 21 "C:\GitHub\wargamer_showcase\Pages\MiniUpload.razor"
                          SubmitForm

#line default
#line hidden
#nullable disable
            ));
            __builder.AddContent(16, "Submit");
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.CloseElement();
        }
        #pragma warning restore 1998
#nullable restore
#line 25 "C:\GitHub\wargamer_showcase\Pages\MiniUpload.razor"
       
    private IFileListEntry selectedImage;
    private string dataUri;

    private async Task HandleImageInputChange(IFileListEntry[] files)
    {
        var rawFile = files.FirstOrDefault();
        if (rawFile != null)
        {
            selectedImage = await rawFile.ToImageFileAsync(rawFile.Type, 1080, 1080);

            var stream = new MemoryStream();
            await selectedImage.Data.CopyToAsync(stream);

            dataUri = $"data:{rawFile.Type};base64,{Convert.ToBase64String(stream.ToArray())}";
        }
    }

    private async Task SubmitForm()
    {
        logger.LogInformation("SubmitForm selected");
        if (selectedImage != null)
        {
            //extract just base64 string without data:image/png;base64 (for example)
            var base64Data = Regex.Match(dataUri, @"data:image/(?<type>.+?),(?<data>.+)").Groups["data"].Value;
            var bytes = Convert.FromBase64String(base64Data);

            using (var stream = new MemoryStream(bytes))
            {
                var uploadedUri = await storageService.UploadFileToStorage(stream, "mini-images", selectedImage.Name);

                logger.LogInformation("Image uploaded to Blob storage");
                await iJSRuntime.InvokeVoidAsync("alert", selectedImage.Name + " was successfully uploaded!");

                selectedImage = null; // Reset image
                dataUri = "";
            }
        }
        else
        {
            await iJSRuntime.InvokeVoidAsync("alert", "Please select an image to upload.");
        }
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime iJSRuntime { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ILogger<MiniUpload> logger { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private AzureStorageService storageService { get; set; }
    }
}
#pragma warning restore 1591
